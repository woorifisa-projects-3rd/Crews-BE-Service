name: Docker build and push

on:
  workflow_dispatch:

jobs:
  build_and_push_backend:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - run: mkdir -p ./src/main/resources/
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.production }}" > ./src/main/resources/application.properties

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Meta for Backend
        id: docker_meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/spring-image

      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta_backend.outputs.tags }}
          labels: ${{ steps.docker_meta_backend.outputs.labels }}


  deploy-to-ec2:
    needs: [ build_and_push_backend, build_and_push_frontend ]
    runs-on: ubuntu-22.04

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            sudo docker stop spring-image
            sudo docker rm spring-image
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/spring-image:main
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-image:main
            sudo docker run --name spring-image -d --network host -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/spring-image:main

